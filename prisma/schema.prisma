generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model roles {
  id          Int          @id @default(autoincrement())
  description String       @db.VarChar(255)
  name        String       @db.VarChar(50)
  status      Boolean?
  deleted_at  DateTime?    @db.Timestamptz(6)
  created_at  DateTime?    @db.Timestamptz(6)
  updated_at  DateTime?    @db.Timestamptz(6)
  user_roles  user_roles[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model user_roles {
  role_id    Int
  user_id    Int
  created_at DateTime  @db.Timestamptz(6)
  updated_at DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  roles      roles     @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users      users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([user_id, role_id], map: "users_roles_pkey")
}

model users {
  id         Int          @id @default(autoincrement())
  status     Boolean
  email      String       @unique @db.VarChar(100)
  full_name  String       @db.VarChar(255)
  username   String?      @unique @db.VarChar(255)
  password   String       @db.VarChar(255)
  deleted_at DateTime?    @db.Timestamptz(6)
  created_at DateTime?    @db.Timestamptz(6)
  updated_at DateTime?    @db.Timestamptz(6)
  user_roles user_roles[]
}
